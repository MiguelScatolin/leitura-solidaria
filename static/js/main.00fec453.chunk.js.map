{"version":3,"sources":["features/text/types.ts","reportWebVitals.ts","shared/http/httpClient.ts","features/text/service.ts","features/text/manager.ts","features/text/views/TextForm.tsx","App.tsx","index.tsx"],"names":["TextType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpClient","axios","create","baseURL","responseType","headers","timeout","postText","text","file","formData","FormData","append","title","type","toString","post","registerText","a","response","data","useStyles","makeStyles","root","height","width","padding","grid","page","display","placeItems","TextForm","classes","useState","setFile","guid","authors","edition","language","Academic","hasImages","setText","handleChange","event","updateText","target","name","value","property","handleRegisterText","className","Paper","Grid","container","direction","alignItems","justify","spacing","item","xs","TextField","color","size","fullWidth","id","label","aria-label","variant","onChange","select","MenuItem","Literature","e","files","FormControlLabel","control","Checkbox","checked","Button","onClick","App","path","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.00fec453.chunk.js","sourcesContent":["export enum TextType {\r\n    Literature,\r\n    Academic,\r\n}\r\n\r\nexport interface Text {\r\n    guid: number;\r\n    title: string;\r\n    authors: string[];\r\n    edition?: number;\r\n    language: string;\r\n    type: TextType;\r\n    hasImages: boolean;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst httpClient = axios.create({\r\n    baseURL: \"http://35.247.35.37:5000/\",\r\n    responseType: \"json\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    timeout: 120000,\r\n});\r\n\r\nexport default httpClient;\r\n","import { httpClient } from \"../../shared/http\";\r\nimport { Text } from \"./types\";\r\n\r\nexport const postText = (text: Text, file: Blob) => {\r\n    var formData = new FormData();\r\n    formData.append('Title', text.title);\r\n    formData.append('Type', text.type.toString());\r\n    formData.append('File', file);\r\n    return httpClient.post<Text>(\"texts\", formData, {headers: {\r\n        'content-type': 'multipart/form-data'\r\n    }})\r\n};\r\n","import { postText } from \"./service\";\r\nimport { Text } from \"./types\";\r\n\r\nexport const registerText = async (text: Text, file: Blob) => {\r\n    const response = await postText(text, file);\r\n    return response.data;\r\n};\r\n","import {\r\n    Button,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Grid,\r\n    MenuItem,\r\n    Paper,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { Text, TextType } from \"../types\";\r\nimport { registerText } from \"../manager\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        padding: 32,\r\n    },\r\n    grid: {\r\n        height: \"100%\",\r\n    },\r\n    page: {\r\n        display: \"grid\",\r\n        placeItems: \"center\",\r\n        padding: \"10% 20%\",\r\n    },\r\n});\r\n\r\nconst TextForm = () => {\r\n    const classes = useStyles();\r\n    const [file, setFile] = useState<Blob | null>(null);\r\n    const [text, setText] = useState<Text>({\r\n        guid: 0,\r\n        title: \"\",\r\n        authors: [],\r\n        edition: 0,\r\n        language: \"\",\r\n        type: TextType.Academic,\r\n        hasImages: false,\r\n    });\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        updateText(event.target.name, event.target.value);\r\n    };\r\n\r\n    const updateText = (property: string, value: string | number | boolean) => {\r\n        setText({ ...text, [property]: value });\r\n    };\r\n\r\n    const handleRegisterText = async () => {\r\n        if(file) {\r\n            const result = await registerText(text, file);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.page}>\r\n            <Paper className={classes.root}>\r\n                <Grid\r\n                    className={classes.grid}\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justify=\"space-between\"\r\n                    spacing={2}\r\n                >\r\n                    <Grid item>Formul√°rio de cadastro de texto</Grid>\r\n                    <Grid container justify=\"space-between\" item spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                name=\"title\"\r\n                                fullWidth\r\n                                id=\"outlined-basic\"\r\n                                label=\"Titulo\"\r\n                                aria-label=\"Nome do texto\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange}\r\n                                value={text.title}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                color=\"primary\"\r\n                                name=\"authors\"\r\n                                size=\"small\"\r\n                                id=\"outlined-basic\"\r\n                                fullWidth\r\n                                label=\"Autores\"\r\n                                aria-label=\"Nome dos Autores\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange}\r\n                                value={text.authors}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify=\"space-between\" item spacing={2}>\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                name=\"edition\"\r\n                                fullWidth\r\n                                type=\"number\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Edi√ß√£o\"\r\n                                aria-label=\"Edi√ß√£o\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange}\r\n                                value={text.edition}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                id=\"lingua\"\r\n                                name=\"language\"\r\n                                label=\"L√≠ngua\"\r\n                                select\r\n                                variant=\"outlined\"\r\n                                aria-label=\"L√≠ngua do texto\"\r\n                                onChange={handleChange}\r\n                                fullWidth\r\n                                value={text.language}\r\n                            >\r\n                                <MenuItem value=\"portugues10\">Ten</MenuItem>\r\n                                <MenuItem value=\"ingles\">Ingl√™s</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                id=\"tipo\"\r\n                                name=\"type\"\r\n                                label=\"Tipo\"\r\n                                select\r\n                                aria-label=\"Tipo do texto\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                                value={text.type}\r\n                            >\r\n                                <MenuItem value={TextType.Academic}>\r\n                                    Academico\r\n                                </MenuItem>\r\n                                <MenuItem value={TextType.Literature}>\r\n                                    Literatura\r\n                                </MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item container justify=\"space-between\" alignItems=\"center\">\r\n                        <input type=\"file\" onChange={(e?: React.ChangeEvent<HTMLInputElement>) => setFile(e.target.files[0])} />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={text.hasImages}\r\n                                    onChange={(event) =>\r\n                                        updateText(\r\n                                            event.target.name,\r\n                                            event.target.checked\r\n                                        )\r\n                                    }\r\n                                    name=\"hasImages\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Tem imagens\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item container justify=\"flex-end\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={handleRegisterText}\r\n                        >\r\n                            Salvar\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextForm;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { TextForm } from \"./features/text\";\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/request\">\n                    <TextForm />\n                </Route>\n                <Route path=\"/\">\n                    <TextForm />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}