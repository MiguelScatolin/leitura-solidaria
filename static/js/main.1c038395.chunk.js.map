{"version":3,"sources":["reportWebVitals.ts","features/text/views/TextForm.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","root","height","width","TextForm","classes","Paper","className","Grid","container","direction","xs","item","TextField","id","label","aria-label","variant","value","select","MenuItem","App","path","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"iOAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,uDCLRQ,EAAYC,YAAW,CACzBC,KAAM,CACFC,OAAQ,QACRC,MAAO,WAuEAC,EAnEE,WACb,IAAMC,EAAUN,IAOhB,OACI,kBAACO,EAAA,EAAD,CAAOC,UAAWF,EAAQJ,MACtB,kBAACO,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,GAAI,IAAvC,qCAEI,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAM,OACNC,aAAW,gBACXC,QAAQ,cAGhB,kBAACT,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAM,UACNC,aAAW,mBACXC,QAAQ,cAGhB,kBAACT,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAM,UACNC,aAAW,mBACXC,QAAQ,cAGhB,kBAACT,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,GAAG,SACHC,MAAM,YACNG,MAAM,KACNC,QAAM,EACNF,QAAQ,WACRD,aAAW,sBAEX,kBAACI,EAAA,EAAD,CAAUF,MAAM,eAAhB,OACA,kBAACE,EAAA,EAAD,CAAUF,MAAM,UAAhB,eAGR,kBAACV,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,GAAG,OACHC,MAAM,OACNG,MAAM,KACNC,QAAM,EACNH,aAAW,gBACXC,QAAQ,YAER,kBAACG,EAAA,EAAD,CAAUF,MAAM,cAAhB,cACA,kBAACE,EAAA,EAAD,CAAUF,MAAM,UAAhB,eCnDTG,MAff,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,UCNpBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SAM5BrC,EAAgBsC,QAAQC,O","file":"static/js/main.1c038395.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { Grid, MenuItem, Paper, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n    },\r\n});\r\n\r\nconst TextForm = () => {\r\n    const classes = useStyles();\r\n    /* name: string;\r\n    authors: string[];\r\n    edition?: number;\r\n    language: string;\r\n    type: TextType;\r\n    hasImages: boolean; */\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Grid container direction=\"column\" xs={12}>\r\n                Formulário de cadastro de texto\r\n                <Grid item>\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Nome\"\r\n                        aria-label=\"Nome do texto\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Autores\"\r\n                        aria-label=\"Nome dos Autores\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Autores\"\r\n                        aria-label=\"Nome dos Autores\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        id=\"lingua\"\r\n                        label=\"Língua\"\r\n                        value=\"20\"\r\n                        select\r\n                        variant=\"outlined\"\r\n                        aria-label=\"Língua do texto\"\r\n                    >\r\n                        <MenuItem value=\"portugues10\">Ten</MenuItem>\r\n                        <MenuItem value=\"ingles\">Inglês</MenuItem>\r\n                    </TextField>\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        id=\"tipo\"\r\n                        label=\"Tipo\"\r\n                        value=\"20\"\r\n                        select\r\n                        aria-label=\"Tipo do texto\"\r\n                        variant=\"outlined\"\r\n                    >\r\n                        <MenuItem value=\"Literatura\">Literatura</MenuItem>\r\n                        <MenuItem value=\"artigo\">Artigo</MenuItem>\r\n                    </TextField>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default TextForm;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { TextForm } from \"./features/text\";\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/request\">\n                    <TextForm />\n                </Route>\n                <Route path=\"/\">\n                    <TextForm />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}